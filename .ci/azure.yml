jobs:
  - job: sysroot
    pool:
      vmImage: 'macOS-latest'
    steps:
      - script:
          brew install ninja
        displayName: 'Installing dependencies'
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
      - script: python -m pip install -r $(Build.SourcesDirectory)/sysroot/requirements.txt
        displayName: 'Install requirements'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/android.py'
        displayName: 'Create android sysroot'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/linux-prepare.py'
        displayName: 'Prepare linux sysroot'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/linux.py'
        displayName: 'Create linux sysroot'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/darwin.py'
        displayName: 'Create darwin sysroot'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/sysroot/output'
          includeRootFolder: false
          archiveType: 'tar'
          tarCompression: 'xz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-sysroot-$(Build.BuildNumber).tar.xz'
          replaceExistingArchive: true
        displayName: 'Create tarball'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'wimal-sysroot-$(Build.BuildNumber)'
        displayName: 'Upload artifact'
  - job: linux
    timeoutInMinutes: 300
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
      - script:
          sudo apt install ninja-build yasm nasm -y
        displayName: 'Installing dependencies'
      - script:
          cmake -E make_directory cmake-build-tablegen cmake-build-azure
        displayName: 'Prepare project'
      - script:
          cmake -E chdir cmake-build-azure cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DWIMAL_TARGET=x64-linux
          -DCMAKE_TOOLCHAIN_FILE=../cmake/MeToolchain.cmake
          -DCMAKE_INSTALL_PREFIX="$(Build.BinariesDirectory)/wimal"
        displayName: 'Configure project'
      - script:
          cmake -E chdir cmake-build-tablegen cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$(Build.SourcesDirectory)/cmake/wimal
          -DWIMAL_HOME=$(Build.SourcesDirectory)/cmake/wimal
        displayName: 'Configure tablegen'
      - script:
          cmake --build cmake-build-tablegen --target install-tablegen --
        displayName: 'Generate table-gen'
      - script:
          cmake --build cmake-build-azure --target installation --
        displayName: 'Build project'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/wimal'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'xz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-linux-$(Build.BuildNumber).tar.xz'
          replaceExistingArchive: true
        displayName: 'Create tarball'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'wimal-linux-$(Build.BuildNumber)'
        displayName: 'Upload artifact'
  - job: macos
    timeoutInMinutes: 300
    pool:
      vmImage: 'macOS-latest'
    steps:
      - script:
          brew install yasm nasm ninja automake libtool
        displayName: 'Installing dependencies'
      - script:
          cmake -E make_directory cmake-build-tablegen cmake-build-azure
        displayName: 'Prepare project'
      - script:
          cmake -E chdir cmake-build-azure cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DWIMAL_TARGET=x64-macos
          -DCMAKE_TOOLCHAIN_FILE=../cmake/MeToolchain.cmake
          -DCMAKE_INSTALL_PREFIX="$(Build.BinariesDirectory)/wimal"
        displayName: 'Configure project'
      - script:
          cmake -E chdir cmake-build-tablegen cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$(Build.SourcesDirectory)/cmake/wimal
          -DWIMAL_HOME=$(Build.SourcesDirectory)/cmake/wimal
        displayName: 'Configure tablegen'
      - script:
          cmake --build cmake-build-tablegen --target install-tablegen --
        displayName: 'Generate tablegen'
      - script:
          cmake --build cmake-build-azure --target installation --
        displayName: 'Build project'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/wimal'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'xz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-macos-$(Build.BuildNumber).tar.xz'
          replaceExistingArchive: true
        displayName: 'Create tarball'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'wimal-macos-$(Build.BuildNumber)'
        displayName: 'Upload artifact'
