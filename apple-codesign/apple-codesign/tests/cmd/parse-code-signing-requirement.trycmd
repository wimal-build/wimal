```
$ rcodesign help parse-code-signing-requirement
Parse binary Code Signing Requirement data into a human readable string

This command can be used to parse binary code signing requirement data and print it in various formats.

The source input format is the binary code requirement serialization. This is the format generated by Apple's `csreq` tool via `csreq -b`. The binary data begins with header magic `0xfade0c00`.

The default output format is the Code Signing Requirement Language. But the output format can be changed via the --format argument.

Our Code Signing Requirement Language output may differ from Apple's. For example, `and` and `or` expressions always have their sub-expressions surrounded by parentheses (e.g. `(a) and (b)` instead of `a and b`) and strings are always quoted. The differences, however, should not matter to the parser or result in a different binary serialization.

Usage: rcodesign[EXE] parse-code-signing-requirement [OPTIONS] <INPUT_PATH>

Arguments:
  <INPUT_PATH>
          Path to file to parse

Options:
  -C, --config-file <CONFIG_PATH>
          Explicit configuration file to load.
          
          If provided, the default configuration files are not loaded, even if they exist.
          
          Can be specified multiple times. Files are loaded/merged in the order given.
          
          The special value `/dev/null` can be used to specify an empty/null config file. It can be used to short-circuit loading of default config files.

      --format <FORMAT>
          Output format
          
          [default: csrl]
          [possible values: csrl, expression-tree]

  -P, --profile <PROFILE>
          Configuration profile to load.
          
          If not specified, the implicit "default" profile is loaded.

  -v, --verbose...
          Increase logging verbosity. Can be specified multiple times

  -h, --help
          Print help (see a summary with '-h')

```
