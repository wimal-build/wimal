jobs:
  - job: sysroot
    pool:
      vmImage: 'macOS-latest'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
      - script: python -m pip install -r $(Build.SourcesDirectory)/sysroot/requirements.txt
        displayName: 'Install requirements'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/android.py'
        displayName: 'Create android sysroot'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/linux.py'
        displayName: 'Create linux sysroot'
      - task: PythonScript@0
        inputs:
          scriptSource: 'filePath'
          scriptPath: '$(Build.SourcesDirectory)/sysroot/darwin.py'
        displayName: 'Create darwin sysroot'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/sysroot/sysroot'
          includeRootFolder: true
          archiveType: 'tar'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-sysroot-$(Build.BuildNumber).tar.gz'
          replaceExistingArchive: true
        displayName: 'Create wimal-sysroot-$(Build.BuildNumber).tar.gz'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/sysroot/sysroot'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'bz2'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-sysroot-$(Build.BuildNumber).tar.bz2'
          replaceExistingArchive: true
        displayName: 'Create wimal-sysroot-$(Build.BuildNumber).tar.bz2'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/sysroot/sysroot'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'xz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-sysroot-$(Build.BuildNumber).tar.xz'
          replaceExistingArchive: true
        displayName: 'Create wimal-sysroot-$(Build.BuildNumber).tar.xz'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'wimal-sysroot-$(Build.BuildNumber)'
        displayName: 'Upload artifact'
  - job: linux
    timeoutInMinutes: 300
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
      - script:
          wget -O $(Agent.TempDirectory)/libc++abi.deb
          http://apt.llvm.org/trusty/pool/main/l/llvm-toolchain-8/libc++abi1-8_8.0.1~svn360950-1~exp1~20190517011409.67_amd64.deb
        displayName: 'Downloading libc++abi'
      - script:
          wget -O $(Agent.TempDirectory)/libc++.deb
          http://apt.llvm.org/trusty/pool/main/l/llvm-toolchain-8/libc++1-8_8.0.1~svn360950-1~exp1~20190517011409.67_amd64.deb
        displayName: 'Downloading libc++'
      - script:
          sudo dpkg -i $(Agent.TempDirectory)/libc++abi.deb $(Agent.TempDirectory)/libc++.deb
        displayName: 'Installing libc++'
      - script:
          sudo apt install ninja-build -y
        displayName: 'Installing Ninja'
      - script:
          cmake -E make_directory cmake-build-azure
        displayName: 'Prepare project'
      - script:
          cmake -E chdir cmake-build-azure cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=MinSizeRel
          -DCMAKE_TOOLCHAIN_FILE=../cmake/CcToolchain.cmake
          -DCMAKE_INSTALL_PREFIX="$(Build.BinariesDirectory)/wimal"
        displayName: 'Configure project'
      - script:
          cmake --build cmake-build-azure --target installation --
        displayName: 'Build project'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/wimal'
          includeRootFolder: true
          archiveType: 'tar'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-linux-$(Build.BuildNumber).tar.gz'
          replaceExistingArchive: true
        displayName: 'Create wimal-linux-$(Build.BuildNumber).tar.gz'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/wimal'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'bz2'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-linux-$(Build.BuildNumber).tar.bz2'
          replaceExistingArchive: true
        displayName: 'Create wimal-linux-$(Build.BuildNumber).tar.bz2'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/wimal'
          includeRootFolder: true
          archiveType: 'tar'
          tarCompression: 'xz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/wimal-linux-$(Build.BuildNumber).tar.xz'
          replaceExistingArchive: true
        displayName: 'Create wimal-linux-$(Build.BuildNumber).tar.xz'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'wimal-linux-$(Build.BuildNumber)'
        displayName: 'Upload artifact'
